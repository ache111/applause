/*
 * generated by Xtext
 */
package org.applause.util.xcode.projectfile.formatting;

import org.applause.util.xcode.projectfile.services.PbxprojGrammarAccess;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.util.Pair;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class PbxprojFormatter extends AbstractDeclarativeFormatter {
	
	@Override
	protected void configureFormatting(FormattingConfig c) {
// It's usually a good idea to activate the following three statements.
// They will add and preserve newlines around comments
//		c.setLinewrap(0, 1, 2).before(getGrammarAccess().getSL_COMMENTRule());
//		c.setLinewrap(0, 1, 2).before(getGrammarAccess().getML_COMMENTRule());
//		c.setLinewrap(0, 1, 1).after(getGrammarAccess().getML_COMMENTRule());
		
		PbxprojGrammarAccess g = (PbxprojGrammarAccess) getGrammarAccess();
		
		c.setNoSpace().after(g.getProjectModelAccess().getSolidusSolidusKeyword_0());
		c.setNoSpace().after(g.getProjectModelAccess().getExclamationMarkDollarSignAsteriskKeyword_1());
		c.setNoSpace().around(g.getEncodingRule());
		
		for (Pair<Keyword, Keyword> pair : g.findKeywordPairs("{", "}")) {
			c.setLinewrap(1).after(pair.getFirst());
			c.setIndentation(pair.getFirst(), pair.getSecond());
			c.setLinewrap(1).before(pair.getSecond());
		}
		for (Pair<Keyword, Keyword> pair : g.findKeywordPairs("(", ")")) {
			c.setLinewrap(1).after(pair.getFirst());
			c.setIndentation(pair.getFirst(), pair.getSecond());
			c.setLinewrap(1).before(pair.getSecond());
		}
		for(Keyword semicolon: g.findKeywords(";")) {
			c.setNoSpace().before(semicolon);
			c.setLinewrap().after(semicolon);
		}
		for(Keyword comma: g.findKeywords(",")) {
			c.setNoSpace().before(comma);
			c.setLinewrap().after(comma);
		}
		for(Keyword equalSign: g.findKeywords("=")) {
			c.setNoLinewrap().after(equalSign);
			c.setNoLinewrap().before(equalSign);
		}
		
		c.setNoSpace().after(g.getPathAccess().getSolidusKeyword_1());
		c.setNoSpace().after(g.getPathAccess().getSolidusKeyword_3_0());
		c.setNoSpace().before(g.getPathAccess().getSolidusKeyword_3_0());
		
		// BuildFile
		c.setNoLinewrap().after(g.getBuildFileAccess().getLeftCurlyBracketKeyword_2());
		c.setNoSpace().after(g.getBuildFileAccess().getLeftCurlyBracketKeyword_2());
		for (Keyword semicolon: g.getBuildFileAccess().findKeywords(";")) {
			if (semicolon != g.getBuildFileAccess().getSemicolonKeyword_10()) {
				c.setNoLinewrap().after(semicolon);
				c.setNoSpace().after(semicolon);
				c.setSpace(" ").after(semicolon);
			}
		}
		c.setNoSpace().before(g.getBuildFileAccess().getRightCurlyBracketKeyword_12());
		c.setNoLinewrap().before(g.getBuildFileAccess().getRightCurlyBracketKeyword_12());
		
		// FileReference
		c.setNoLinewrap().after(g.getFileReferenceAccess().getLeftCurlyBracketKeyword_2());
		c.setNoSpace().after(g.getFileReferenceAccess().getLeftCurlyBracketKeyword_2());
		for (Keyword semicolon: g.getFileReferenceAccess().findKeywords(";")) {
			if (semicolon != g.getFileReferenceAccess().getSemicolonKeyword_20()) {
				c.setNoLinewrap().after(semicolon);
				c.setNoSpace().after(semicolon);
				c.setSpace(" ").after(semicolon);
			}
		}
		c.setNoSpace().before(g.getFileReferenceAccess().getRightCurlyBracketKeyword_19());
		c.setNoLinewrap().before(g.getFileReferenceAccess().getRightCurlyBracketKeyword_19());
		
		// BuildSetting
		c.setNoLinewrap().before(g.getSimpleBuildsettingAccess().getEqualsSignKeyword_1());
		c.setNoLinewrap().after(g.getSimpleBuildsettingAccess().getEqualsSignKeyword_1());
	}
}
