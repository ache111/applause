grammar org.applause.util.xcode.projectfile.Pbxproj hidden(WS, QUOTES, COMMENT)

generate pbxproj "http://www.applause.org/util/xcode/projectfile/Pbxproj"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

ProjectModel:
	'//' '!$*' encoding=Encoding '*$!'
	'{'
		'archiveVersion' '=' archiveVersion=INT ';'
		'classes' '=' '{' '}' ';'
		'objectVersion' '=' objectVersion=INT ';'
		'objects' '=' '{'
			(objects+=ProjectObject)*
		'}' ';'
		'rootObject' '=' rootObject=[ProjectObject] ';'
	'}'
;

enum Encoding:
	UTF8
;

ProjectObject:
	BuildFile | FileReference | Project | Group | VariantGroup | ContainerItemProxy | 
	BuildPhase | NativeTarget | TargetDependency | BuildConfiguration | ConfigurationList | VersionGroup
;

BuildFile:
	name=UUID '=' '{' 
		'isa' '=' isa=PBXBuildFileLiteral ';'
		'fileRef' '=' fileRef=[ProjectObject] ';'
		(
			'settings' '=' '{'
				settings+=BuildFileSetting*
			'}' ';'
		)? 
	 '}' ';'
;

BuildFileSetting:
	BuildFileSettingWithString | BuildFileSettingWithCollection
;

BuildFileSettingWithCollection:
	name=ID '=' '(' (values+=ID ',')* ')' ';'
;


BuildFileSettingWithString:
	name=ID '=' value=STRING ';'	
;


PBXBuildFileLiteral:
	'PBXBuildFile'	
;

FileReference:
	name=UUID '=' '{' 
		'isa' '=' isa=PBXFileReferenceLiteral ';'
		( ('lastKnownFileType' '=' lastKnownFileType=FileType) | ('explicitFileType' '=' explicitFileType=FileType) )';'
		('includeInIndex' '=' includeInIndex=INT';')?
		('name' '=' fileName=ID ';')?
		'path' '=' path=Path ';'
		'sourceTree' '=' sourceTree=SourceTree ';'
		('wrapsLines' '=' wrapsLines=INT ';')?
	'}' ';'
;

PBXFileReferenceLiteral:
	'PBXFileReference'
;

BuildFileSettingStringValue:
	value=STRING
;

enum FileType:
	none='none - dont use this'
	| wrapperApplication='wrapper.application' 
	| wrapperFramework='wrapper.framework'
	| wrapperCFBundle='wrapper.cfbundle'
	| wrapperXCDatamodel = 'wrapper.xcdatamodel'
	| imagePNG = 'image.png'
	| textPlistXml='text.plist.xml'
	| testPlistStrings='text.plist.strings'
	| sourcecodeCObjc='sourcecode.c.objc'
	| sourcecodeCH='sourcecode.c.h'
;

Path:
	{Path} '/'? fragments+=PathFragment ('/' fragments+=PathFragment)*
;

PathFragment:
	PathVariable | PathID | PathString
;

PathVariable:
	'$' '('? value=SourceTree ')'?
;

PathID:
	value=ID
;

PathString:
	value=STRING
;

PathList:
	{PathList}
	'('
		('\\"'? paths+=Path '\\"'? ',')+
	')'
;

enum SourceTree:
	SDKROOT | BUILT_PRODUCTS_DIR | group='"<group>"' | inherited | SRCROOT | DEVELOPER_DIR
;

Project:
	name=UUID '=' '{'
		'isa' '=' isa=PBXProjectLiteral ';'
		'attributes' '=' '{'
			('CLASSPREFIX' '=' classPrefix = ID';')?
			'LastUpgradeCheck' '=' lastupgradeCheck=INT ';'
			'ORGANIZATIONNAME' '=' organisationName=STRING ';'
		'}' ';'
		('buildConfigurationList' '=' buildConfigurationList=[ConfigurationList] ';')? // TODO: make this non-optional!
		'compatibilityVersion' '=' compatibilityVersion=STRING ';'
		'developmentRegion' '=' developmentRegion=Language ';'
		'hasScannedForEncodings' '=' hasScannedForEncodings=INT ';'
		'knownRegions' '=' '('
			(knownRegions += ID ',')*
		')' ';'
		'mainGroup' '=' mainGroup=[Group] ';'
		('productRefGroup' '=' productRefGroup=[Group] ';')? // TODO: make this non-optional!!
		'projectDirPath' '=' projectDirPath=STRING ';'
		'projectRoot' '=' projectRoot=STRING ';'
		('targets' '=' '('
			(targets+=[NativeTarget] ',')*
		')' ';')? // TODO make this non-optional!
	'}' ';'
;

enum Language:
	English
;

PBXProjectLiteral:
	'PBXProject'
;

Group:
	name=UUID '=' '{'
		'isa' '=' isa=PBXGroupLiteral ';'
		'children' '=' '('
			(children+=[ProjectObject] ',')*
		')' ';'
		('name' '=' groupName=(ID | STRING) ';' )?
		('path' '=' path=Path ';')?
		'sourceTree' '=' sourceTree=SourceTree ';'
	'}' ';'
;

PBXGroupLiteral:
	'PBXGroup'
;

VariantGroup:
	name=UUID '=' '{'
		'isa' '=' isa=PBXVariantGroupLiteral ';'
		'children' '=' '('
			(children+=[ProjectObject] ',')*
		')' ';'
		('name' '=' groupName=(ID | STRING) ';' )?		
		'sourceTree' '=' sourceTree=SourceTree ';'		
	'}' ';'
;

PBXVariantGroupLiteral:
	'PBXVariantGroup'
;

ContainerItemProxy:
	name=UUID '=' '{'
		'isa' '=' isa=PBXContainerItemProxyLiteral ';'
		'containerPortal' '=' containerPortal=[Project] ';'
		'proxyType' '=' proxyType=INT ';'
		'remoteGlobalIDString' '=' remoteGlobalIDString=UUID ';'
		'remoteInfo' '=' remoteInfo=ID ';'
	'}' ';'
;

PBXContainerItemProxyLiteral:
	'PBXContainerItemProxy'
;

BuildPhase:
	FrameworksBuildPhase | SourcesBuildPhase | ResourcesBuildPhase | ShellScriptBuildPhase
;

FrameworksBuildPhase: 
	name=UUID '=' '{'
		'isa' '=' isa=PBXFrameworksBuildPhaseLiteral ';'
		'buildActionMask' '=' buildActionMask=INT ';'
		'files' '=' '('
			(files+=[BuildFile] ',')*
		')' ';'
		'runOnlyForDeploymentPostprocessing' '=' runOnlyForDeploymentPostprocessing=INT ';'
	'}' ';'
;

PBXFrameworksBuildPhaseLiteral:
	'PBXFrameworksBuildPhase'
;

SourcesBuildPhase: 
	name=UUID '=' '{'
		'isa' '=' isa=PBXSourcesBuildPhaseLiteral ';'
		'buildActionMask' '=' buildActionMask=INT ';'
		'files' '=' '('
			(files+=[BuildFile] ',')*
		')' ';'
		'runOnlyForDeploymentPostprocessing' '=' runOnlyForDeploymentPostprocessing=INT ';'
	'}' ';'
;

PBXSourcesBuildPhaseLiteral:
	'PBXSourcesBuildPhase'
;

ResourcesBuildPhase: 
	name=UUID '=' '{'
		'isa' '=' isa=PBXResourcesBuildPhaseLiteral ';'
		'buildActionMask' '=' buildActionMask=INT ';'
		'files' '=' '('
			(files+=[BuildFile] ',')*
		')' ';'
		'runOnlyForDeploymentPostprocessing' '=' runOnlyForDeploymentPostprocessing=INT ';'
	'}' ';'
;

PBXResourcesBuildPhaseLiteral:
	'PBXResourcesBuildPhase'
;

ShellScriptBuildPhase: 
	name=UUID '=' '{'
		'isa' '=' isa=PBXShellScriptBuildPhaseLiteral ';'
		'buildActionMask' '=' buildActionMask=INT ';'
		'files' '=' '('
			(files+=[BuildFile] ',')*
		')' ';'
		'inputPaths' '=' '('
		')' ';'
		'outputPaths' '=' '('
		')' ';'
		'runOnlyForDeploymentPostprocessing' '=' runOnlyForDeploymentPostprocessing=INT ';'
		'shellPath' '=' shellPath=Path ';'
		'shellScript' '=' shellScript=STRING ';'
	'}' ';'
;

PBXShellScriptBuildPhaseLiteral:
	'PBXShellScriptBuildPhase'
;

NativeTarget:
	name=UUID '=' '{'
		'isa' '=' isa=PBXNativeTargetLiteral ';'
		('buildConfigurationList' '=' buildConfigurationList=[ConfigurationList] ';')? // TODO: make this non-optional
		('buildPhases' '=' '('
			(buildPhases+=[BuildPhase] ',')*
		')' ';')? // TODO: make this non-optional
		'buildRules' '=' '('
		')' ';'
		'dependencies' '=' '('
			(dependencies+=[TargetDependency] ',')*
		')' ';'
		'name' '=' targetName=ID ';'
		'productName' '=' productName=ID ';'
		'productReference' '=' productReference=[FileReference] ';'
		'productType' '=' productType=ProductType ';'
	'}' ';'
;

enum ProductType:
	Application='"com.apple.product-type.application"' | Bundle='"com.apple.product-type.bundle"'
;

PBXNativeTargetLiteral:
	'PBXNativeTarget'
;

TargetDependency:
	name=UUID '=' '{'
		'isa' '=' isa=PBXTargetDependencyLiteral ';'
		'target' '=' target=[NativeTarget] ';'
		'targetProxy' '=' targetProxy=[ContainerItemProxy] ';'
	'}' ';'
;

PBXTargetDependencyLiteral:
	'PBXTargetDependency'
;

BuildConfiguration:
	name=UUID '=' '{'
		'isa' '=' isa=XCBuildConfigurationLiteral ';'
		'buildSettings' '=' '{'
			(buildSettings+=BuildSetting)*
		'}' ';'
		'name' '=' configurationName=ID ';' //TODO: find out if this is an enum
	'}' ';'
;

BuildSetting:
	SimpleBuildsetting | ComplexBuildSetting
;

ComplexBuildSetting:
	name=ID '=' '('
		(values+=STRING ',')*
	')' ';'
;


SimpleBuildsetting:
	name=SettingID '=' value=BuildSettingValue ';'
;

SettingID:
	ID | STRING | 'SDKROOT'
;


BuildSettingValue:
	ID | STRING | INT
;

XCBuildConfigurationLiteral:
	'XCBuildConfiguration'
;

ConfigurationList:
	name=UUID '=' '{'
		'isa' '=' isa=XCConfigurationListLiteral ';'
		'buildConfigurations' '=' '('
			(buildConfigurations+=[BuildConfiguration] ',')*
		')' ';'
		'defaultConfigurationIsVisible' '=' defaultConfigurationIsVisible=INT ';'
		('defaultConfigurationName' '=' defaultConfigurationName=ID ';')? // TODO: enum?
	'}' ';'
;

XCConfigurationListLiteral:
	'XCConfigurationList'
;

VersionGroup:
	name=UUID '=' '{'
		'isa' '=' isa=XCVersionGroupLiteral ';'
		'children' '=' '('
			(children+=[FileReference] ',')*
		')' ';'
		'currentVersion' '=' currentVersion=[FileReference] ';'
		'path' '=' path=Path ';'
		'sourceTree' '=' sourceTree=SourceTree ';'
		'versionGroupType' '=' versionGroupType=VersionGroupType ';'
	'}' ';'
;

XCVersionGroupLiteral:
	'XCVersionGroup'
;

enum VersionGroupType:
	none='none - dont use this'
	| wrapperXCDatamodel = 'wrapper.xcdatamodel'
;



UUID:
	(INT | ID)*
;

terminal INT returns ecore::EInt: ('0'..'9')+;
terminal ID: ('a'..'z'|'A'..'Z'|'0'..'9') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'.' | '+' | '-' | '@')*;
terminal STRING	: 
			'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
			"'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'"
		; 


terminal WS: (' '|'\t'|'\r'|'\n')+;
terminal QUOTES: '"';

terminal COMMENT	: '/*' -> '*/';